<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!--spring的配置文件，配置和业务逻辑有关的  -->
	<!-- 默认扫描所有的注解，禁用掉默认的，只是扫描带@controller的 -->
	<context:component-scan base-package="com.ssm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!--1:数据源。事物控制  -->
	<context:property-placeholder location="classpath:database.properties"/>
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbc_url}"></property>
		<property name="driverClass" value="${jdbc.jdbc_driver}"></property>
		<property name="user" value="${jdbc.jdbc_username}"></property>
		<property name="password" value="${jdbc.jdbc_password}"></property>
	</bean>
	<!--配置和mybatis整合  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!--指定mybatis.mapper文件的位置  -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!--配置扫描器，将mybatis接口IDE实现加入到ioc容器中，自动生成默认id  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm"></property>
	</bean>
	<!-- 批量插入 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	<!-- 事务控制-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!--开启注解的事务，使用xml编程式事务  -->
	<aop:config>
		<aop:pointcut expression="execution( * com.ssm.crud.service.*.*(..))" id="txPoint"/>
		<!--配置事务增强处理  -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<!--切入点切入所有的方法采用事务管理  -->
			<tx:method name="*"/>
			<!--以get开头的所有方法采用只读方式  -->
			<tx:method name="get" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	</beans>